networks:
  redinternanodos:
    driver: bridge

services:
  node0:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node0
    working_dir: /app/
    environment:      
      LOG_FILE: "/app/logs/node0.log"
    ports:
      - "14000:14000"
      - "4000:4000"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4000"]

  node1:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node1
    working_dir: /app
    environment:      
      LOG_FILE: "/app/logs/node1.log"
    ports:
      - "14001:14001"
      - "4001:4001"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4001"]

  node2:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node2
    working_dir: /app
    environment:      
      LOG_FILE: "/app/logs/node2.log"
    ports:
      - "14002:14002"
      - "4002:4002"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4002"]

  node3:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node3
    working_dir: /app
    environment:      
      LOG_FILE: "/app/logs/node3.log"
    ports:
      - "14003:14003"
      - "4003:4003"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4003"]

  node4:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node4
    working_dir: /app
    environment:      
      LOG_FILE: "/app/logs/node4.log"
    ports:
      - "14004:14004"
      - "4004:4004"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4004"]

  node5:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node5
    working_dir: /app
    environment:      
      LOG_FILE: "/app/logs/node5.log"
    ports:
      - "14005:14005"
      - "4005:4005"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4005"]

  node6:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node6
    working_dir: /app/
    environment:      
      LOG_FILE: "/app/logs/node6.log"
    ports:
      - "14006:14006"
      - "4006:4006"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4006"]

  node7:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node7
    working_dir: /app/
    environment:      
      LOG_FILE: "/app/logs/node7.log"
    ports:
      - "14007:14007"
      - "4007:4007"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4007"]

  node8:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: redis_server/Dockerfile
    image: redis-node
    container_name: node8
    working_dir: /app
    environment:      
      LOG_FILE: "/app/logs/node8.log"
    ports:
      - "14008:14008"
      - "4008:4008"
    volumes:
      - ./redis_server/rdb_files:/app/redis_server/rdb_files
      - ./logs:/app/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/redis_server_bin", "4008"]

  llm_microservice:
    networks:
      - redinternanodos
    build:
      dockerfile: llm_microservice/Dockerfile
    restart: on-failure
    image: llm_microservice
    container_name: llm_microservice
    working_dir: /app    
    volumes:
      - ./logs:/app/logs
    depends_on:
      - node0
      - node1
      - node2
      - node3
      - node4
      - node5
      - node6
      - node7
      - node8
    environment:
      REDIS_NODE_HOSTS: node8:4008,node7:4007,node6:4006,node5:4005,node4:4004,node3:4003,node2:4002,node1:4001,node0:4000
      GEMINI_API_KEY: AIzaSyDSyVJnHxJnUXDRnM7SxphBTwEPGtOjMEI
      LOG_FILE: "/app/logs/llm_microservice.log"
    ports:
      - "4030:4030"
    command: ["/app/llm_microservice_bin"]

  microservice:
    networks:
      - redinternanodos
    build:
      context: .
      dockerfile: microservice/Dockerfile
    restart: on-failure
    image: microservice
    container_name: microservice    
    working_dir: /app
    volumes:
      - ./logs:/app/logs
    depends_on:
      - node0
      - node1
      - node2
      - node3
      - node4
      - node5
      - node6
      - node7
      - node8
    environment:
      REDIS_NODE_HOSTS: node8:4008,node7:4007,node6:4006,node5:4005,node4:4004,node3:4003,node2:4002,node1:4001
      LOG_FILE: "/app/logs/microservice.log"
    ports:
      - "5000:5000"
    command: ["/app/microservice_bin"]
